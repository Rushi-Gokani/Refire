{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  /* Ensure section never allows page horizontal scroll */
  .ai-why-buy-section-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 20px {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};
    box-sizing: border-box;
    overflow-x: hidden; /* prevent page horizontal overflow */
    overflow-y: visible;
  }

  .ai-why-buy-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    box-sizing: border-box;
  }

  .ai-why-buy-header-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: {{ block.settings.header_margin_bottom }}px;
  }

  .ai-why-buy-title-{{ ai_gen_id }} {
    color: {{ block.settings.title_color }};
    font-size: {{ block.settings.title_size }}px;
    font-weight:700;
    margin:0;
    line-height:1.2;
  }

  .ai-why-buy-subtitle-{{ ai_gen_id }} {
    color: {{ block.settings.subtitle_color }};
    font-size: {{ block.settings.subtitle_size }}px;
    margin:16px 0 0;
    line-height:1.4;
  }

  .ai-why-buy-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: {{ block.settings.column_gap }}px;
    margin-top: {{ block.settings.content_margin_top }}px;
  }

  .ai-why-buy-column-{{ ai_gen_id }} {
    text-align: center;
    padding: {{ block.settings.column_padding }}px;
    background-color: {{ block.settings.column_background_color }};
    border-radius: {{ block.settings.column_border_radius }}px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-sizing: border-box;
  }

  .ai-why-buy-column-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
  }

  .ai-why-buy-icon-wrapper-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    margin: 0 auto {{ block.settings.icon_margin_bottom }}px;
    display:flex;
    align-items:center;
    justify-content:center;
    background-color: {{ block.settings.icon_background_color }};
    border-radius:50%;
    box-sizing:border-box;
  }

  .ai-why-buy-icon-{{ ai_gen_id }} {
    width: calc({{ block.settings.icon_size }}px * 0.5);
    height: calc({{ block.settings.icon_size }}px * 0.5);
    stroke: {{ block.settings.icon_color }};
    stroke-width:2;
    fill:none;
  }

  .ai-why-buy-column-title-{{ ai_gen_id }} {
    color: {{ block.settings.column_title_color }};
    font-size: {{ block.settings.column_title_size }}px;
    font-weight:700;
    margin:0 0 {{ block.settings.title_margin_bottom }}px;
    line-height:1.3;
  }

  .ai-why-buy-column-description-{{ ai_gen_id }} {
    color: {{ block.settings.column_description_color }};
    font-size: {{ block.settings.column_description_size }}px;
    margin:0;
    line-height:1.5;
  }

  /* MOBILE CAROUSEL - use wrapper padding (not item margins) for breathing room */
  .ai-why-buy-carousel-wrapper-{{ ai_gen_id }} {
    display: none;
    overflow: hidden; /* important: hide any overflowing track */
    margin-top: {{ block.settings.content_margin_top }}px;
    position: relative;
    box-sizing: border-box;
    padding: 0 40px; /* breathing room so center card has space and partial neighbors are visible */
  }

  .ai-why-buy-carousel-track-{{ ai_gen_id }} {
    display:flex;
    transition: transform 0.35s ease;
    cursor: grab;
    touch-action: pan-y;
    will-change: transform;
    align-items: stretch;
    box-sizing: border-box;
  }

  .ai-why-buy-carousel-track-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  /* Items: remove horizontal margins (margins caused overflow) and use wrapper padding instead */
  .ai-why-buy-carousel-item-{{ ai_gen_id }} {
    flex: 0 0 calc(100vw - 80px); /* visible width = viewport minus wrapper padding*2 */
    max-width: calc(100vw - 80px);
    margin: 0; /* IMPORTANT: no horizontal margins */
    text-align:center;
    padding: {{ block.settings.column_padding }}px;
    background-color: {{ block.settings.column_background_color }};
    border-radius: {{ block.settings.column_border_radius }}px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    scroll-snap-align: center;
    outline: none;
    position: relative;
    box-sizing: border-box; /* critical */
  }

  .ai-why-buy-carousel-item-{{ ai_gen_id }}:focus {
    outline: 2px solid {{ block.settings.icon_color }};
    outline-offset:2px;
  }

  .ai-why-buy-carousel-item-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
  }

  .ai-why-buy-carousel-item-{{ ai_gen_id }}.centered {
    transform: scale(1.05);
    z-index: 2;
  }

  /* Pagination dots (hidden by default; shown on mobile) */
  .ai-why-buy-dots-{{ ai_gen_id }} {
    display: none;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin-top: 16px;
  }
  .ai-why-buy-dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(0,0,0,0.25);
    border: none;
    padding: 0;
    cursor: pointer;
  }
  .ai-why-buy-dot-{{ ai_gen_id }}.is-active { background-color: {{ block.settings.icon_color }}; }
  .ai-why-buy-dot-{{ ai_gen_id }}:focus { outline: 2px solid {{ block.settings.icon_color }}; outline-offset: 2px; }

  .ai-why-buy-sr-only-{{ ai_gen_id }} {
    position:absolute;
    width:1px;
    height:1px;
    padding:0;
    margin:-1px;
    overflow:hidden;
    clip:rect(0,0,0,0);
    white-space:nowrap;
    border:0;
  }

  @media screen and (max-width: 990px) {
    .ai-why-buy-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(2, 1fr);
      gap: {{ block.settings.column_gap | times: 0.8 }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-why-buy-carousel-item-{{ ai_gen_id }} { background-color: transparent; }

    .ai-why-buy-section-{{ ai_gen_id }} {
      padding: {{ block.settings.section_padding_top | times: 0.7 }}px 0 {{ block.settings.section_padding_bottom | times: 0.7 }}px;
    }

    .ai-why-buy-container-{{ ai_gen_id }} { padding: 0 16px; }

    .ai-why-buy-grid-{{ ai_gen_id }} { display: none; }
    .ai-why-buy-carousel-wrapper-{{ ai_gen_id }} {
      display: block;
      margin-left: 0;
      margin-right: 0;
      padding: 0; /* remove side padding so slides can be full-width */
    }

    .ai-why-buy-title-{{ ai_gen_id }} { font-size: {{ block.settings.title_size | times: 0.9 }}px; }
    .ai-why-buy-subtitle-{{ ai_gen_id }} { font-size: {{ block.settings.subtitle_size | times: 0.95 }}px; }
    .ai-why-buy-column-title-{{ ai_gen_id }} { font-size: {{ block.settings.column_title_size | times: 0.95 }}px; }
    .ai-why-buy-column-description-{{ ai_gen_id }} { font-size: {{ block.settings.column_description_size | times: 0.95 }}px; }

    /* make each card exactly 100% of container width (one card visible & centered) */
    .ai-why-buy-carousel-item-{{ ai_gen_id }} {
      flex: 0 0 100%;
      max-width: 100%;
      margin: 0;
      padding-left: 20px;
      padding-right: 20px;
      box-sizing: border-box;
    }

    .ai-why-buy-carousel-item-{{ ai_gen_id }}.centered { transform: none; }
    .ai-why-buy-carousel-track-{{ ai_gen_id }} { box-sizing: border-box; will-change: transform; }

    /* Show dots on mobile only */
    .ai-why-buy-dots-{{ ai_gen_id }} { display: flex; }
  }

  @media screen and (max-width: 480px) {
    .ai-why-buy-carousel-wrapper-{{ ai_gen_id }} { padding: 0; }
    .ai-why-buy-carousel-item-{{ ai_gen_id }} { flex: 0 0 100%; max-width: 100%; }
  }

  @media (prefers-reduced-motion: reduce) {
    .ai-why-buy-carousel-track-{{ ai_gen_id }} { transition: none !important; }
  }

  /* Final defensive overflow fix scoped to this section */
  .ai-why-buy-section-{{ ai_gen_id }} {
    position: relative !important;
    width: 100% !important;
    overflow-x: hidden !important;    /* prevent horizontal page scroll caused by anything inside */
    overflow-y: visible !important;
    box-sizing: border-box !important;
  }

  /* keep container bounded to viewport */
  .ai-why-buy-section-{{ ai_gen_id }} .ai-why-buy-container-{{ ai_gen_id }},
  .ai-why-buy-section-{{ ai_gen_id }} .ai-why-buy-carousel-wrapper-{{ ai_gen_id }} {
    max-width: 100vw !important;
    box-sizing: border-box !important;
    overflow-x: hidden !important;
  }

  /* Make images and svgs absolutely safe (prevent them from causing overflow) */
  .ai-why-buy-section-{{ ai_gen_id }} img,
  .ai-why-buy-section-{{ ai_gen_id }} picture,
  .ai-why-buy-section-{{ ai_gen_id }} svg {
    max-width: 100% !important;
    height: auto !important;
    display: block !important;
    box-sizing: border-box !important;
    object-fit: contain !important;
  }

  /* Force every child to not exceed viewport width (aggressive but scoped) */
  .ai-why-buy-section-{{ ai_gen_id }} * {
    box-sizing: border-box !important;
    max-width: 100vw !important;
    word-break: break-word !important;
  }

  /* Carousel track and items: remove margins (margins were creating overflow); wrapper padding provides breathing room */
  .ai-why-buy-section-{{ ai_gen_id }} .ai-why-buy-carousel-track-{{ ai_gen_id }} {
    max-width: 100% !important;
    box-sizing: border-box !important;
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
  }

  .ai-why-buy-section-{{ ai_gen_id }} .ai-why-buy-carousel-item-{{ ai_gen_id }} {
    margin-left: 0 !important;
    margin-right: 0 !important;
    box-sizing: border-box !important;
  }

  /* Extra guard for any absolutely positioned children */
  .ai-why-buy-section-{{ ai_gen_id }} [style*="left"],
  .ai-why-buy-section-{{ ai_gen_id }} [style*="right"] {
    max-width: 100vw !important;
    box-sizing: border-box !important;
  }

  /* Small devices: tighten wrapper padding so centered card still fits */
  @media (max-width: 420px) {
    .ai-why-buy-section-{{ ai_gen_id }} .ai-why-buy-carousel-wrapper-{{ ai_gen_id }} {
      padding-left: 12px !important;
      padding-right: 12px !important;
    }
    .ai-why-buy-section-{{ ai_gen_id }} .ai-why-buy-carousel-item-{{ ai_gen_id }} {
      flex-basis: calc(100vw - 24px) !important;
      max-width: calc(100vw - 27px) !important;
    }
  }
{% endstyle %}


<why-buy-carousel-{{ ai_gen_id }} class="ai-why-buy-section-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-why-buy-container-{{ ai_gen_id }}">
    {% if block.settings.section_title != blank or block.settings.section_subtitle != blank %}
      <div class="ai-why-buy-header-{{ ai_gen_id }}">
        {% if block.settings.section_title != blank %}
          <h2 class="ai-why-buy-title-{{ ai_gen_id }}">{{ block.settings.section_title }}</h2>
        {% endif %}
        {% if block.settings.section_subtitle != blank %}
          <p class="ai-why-buy-subtitle-{{ ai_gen_id }}">{{ block.settings.section_subtitle }}</p>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-why-buy-grid-{{ ai_gen_id }}">
      <div class="ai-why-buy-column-{{ ai_gen_id }}">
        <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
          <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24">
            <path d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_1_title }}</h3>
        <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_1_description }}</p>
      </div>

      <div class="ai-why-buy-column-{{ ai_gen_id }}">
        <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
          <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_2_title }}</h3>
        <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_2_description }}</p>
      </div>

      <div class="ai-why-buy-column-{{ ai_gen_id }}">
        <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
          <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24">
            <path d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_3_title }}</h3>
        <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_3_description }}</p>
      </div>

      <div class="ai-why-buy-column-{{ ai_gen_id }}">
        <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
          <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24">
            <path d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_4_title }}</h3>
        <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_4_description }}</p>
      </div>
    </div>

    <div class="ai-why-buy-carousel-wrapper-{{ ai_gen_id }}" role="region" aria-label="Features carousel">
      <div class="ai-why-buy-carousel-track-{{ ai_gen_id }}" role="group" aria-live="polite">
        <!-- original 4 items (cloning is handled by JS) -->
        <div class="ai-why-buy-carousel-item-{{ ai_gen_id }}" tabindex="0" role="group" aria-label="Feature 1 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
            <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_1_title }}</h3>
          <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_1_description }}</p>
        </div>

        <div class="ai-why-buy-carousel-item-{{ ai_gen_id }}" tabindex="0" role="group" aria-label="Feature 2 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
            <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_2_title }}</h3>
          <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_2_description }}</p>
        </div>

        <div class="ai-why-buy-carousel-item-{{ ai_gen_id }}" tabindex="0" role="group" aria-label="Feature 3 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
            <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_3_title }}</h3>
          <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_3_description }}</p>
        </div>

        <div class="ai-why-buy-carousel-item-{{ ai_gen_id }}" tabindex="0" role="group" aria-label="Feature 4 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ ai_gen_id }}">
            <svg class="ai-why-buy-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ ai_gen_id }}">{{ block.settings.column_4_title }}</h3>
          <p class="ai-why-buy-column-description-{{ ai_gen_id }}">{{ block.settings.column_4_description }}</p>
        </div>
      </div>

      <div class="ai-why-buy-sr-only-{{ ai_gen_id }}" aria-live="polite" aria-atomic="true"></div>
      <div class="ai-why-buy-dots-{{ ai_gen_id }}" role="tablist" aria-label="Carousel pagination"></div>
    </div>
  </div>
</why-buy-carousel-{{ ai_gen_id }}>

<script>
  (function(){
    class WhyBuyCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.track = null;
        this.items = [];
        this.originalCount = 4;
        this.currentIndex = 0;
        this.itemWidth = 0;
        this.isDragging = false;
        this.startX = 0;
        this.currentX = 0;
        this.initialTransform = 0;
        this.transitionDuration = 350;
        this._resizeTimer = null;
        this.srLiveRegion = null;
        this._autoTimer = null;
        this.dotsContainer = null;
        this.dots = [];
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-why-buy-carousel-track-{{ ai_gen_id }}');
        this.srLiveRegion = this.querySelector('.ai-why-buy-sr-only-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-why-buy-dots-{{ ai_gen_id }}');
        if (!this.track) return;

        // If clones not created yet, build them
        this.setupClones();

        // update items list & sizes
        this.items = Array.from(this.track.children);
        this.calculateItemWidth();
        // start at first original (after prepended clones)
        this.currentIndex = this.originalCount;
        this.jumpToCurrent();

        // ensure wrapper hides overflow (defense)
        const wrapper = this.track.parentElement;
        if (wrapper) wrapper.style.overflow = 'hidden';

        this.setupEventListeners();
        this.updateCentered();
        this.announceCurrent();
        this.buildDots();
        this.updateDots();

        // Disable auto sliding on mobile
        if (window.matchMedia('(max-width: 749px)').matches) {
          this.stopAuto();
        }
      }

      disconnectedCallback() {
        this.removeEventListeners();
      }

      setupClones() {
        const children = Array.from(this.track.children);
        // don't double-clone
        if (children.length >= this.originalCount * 3) return;

        const firstN = children.slice(0, this.originalCount);
        const lastN = children.slice(-this.originalCount);

        // clone lastN and prepend in same order
        lastN.forEach(node => {
          const clone = node.cloneNode(true);
          clone.classList.add('ai-clone');
          this.track.insertBefore(clone, this.track.firstChild);
        });

        // clone firstN and append
        firstN.forEach(node => {
          const clone = node.cloneNode(true);
          clone.classList.add('ai-clone');
          this.track.appendChild(clone);
        });
      }

      calculateItemWidth() {
        if (!this.track || !this.track.children.length) return;

        // Use parent container width so on mobile each item equals viewport width
        const containerWidth = this.track.parentElement ? this.track.parentElement.offsetWidth : window.innerWidth;

        // measure first child content width and respect container width
        const firstChildRect = this.track.children[0].getBoundingClientRect();
        const measuredChildWidth = Math.round(firstChildRect.width);

        // On small screens, force itemWidth to container width (one card visible)
        if (window.matchMedia('(max-width: 749px)').matches) {
          this.itemWidth = Math.round(containerWidth);
          // set explicit width for each child to match container
          Array.from(this.track.children).forEach(child => {
            child.style.width = this.itemWidth + 'px';
            child.style.flex = '0 0 ' + this.itemWidth + 'px';
          });
        } else {
          // desktop / tablet: use measured child width (keeps earlier behavior)
          this.itemWidth = measuredChildWidth;
          Array.from(this.track.children).forEach(child => {
            child.style.width = measuredChildWidth + 'px';
            child.style.flex = '0 0 ' + measuredChildWidth + 'px';
          });
        }

        // Update track width accordingly
        this.track.style.width = (this.track.children.length * this.itemWidth) + 'px';
      }

      setupEventListeners() {
        this._onPointerDown = this.onPointerDown.bind(this);
        this._onPointerMove = this.onPointerMove.bind(this);
        this._onPointerUp = this.onPointerUp.bind(this);
        this._onResize = this.onResize.bind(this);
        this._onTransitionEnd = this.onTransitionEnd.bind(this);

        this.track.addEventListener('pointerdown', this._onPointerDown, { passive: true });
        window.addEventListener('pointermove', this._onPointerMove, { passive: true });
        window.addEventListener('pointerup', this._onPointerUp);
        window.addEventListener('resize', this._onResize);
        this.track.addEventListener('transitionend', this._onTransitionEnd);

        this.track.addEventListener('mouseenter', () => this.stopAuto());
        this.track.addEventListener('mouseleave', () => this.startAuto());

        // keyboard for original items
        const originalItems = Array.from(this.querySelectorAll('.ai-why-buy-carousel-item-{{ ai_gen_id }}')).slice(0, this.originalCount);
        originalItems.forEach((el, idx) => {
          el.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowLeft') { e.preventDefault(); this.prev(); }
            if (e.key === 'ArrowRight') { e.preventDefault(); this.next(); }
          });
          el.addEventListener('focus', () => {
            // focus sets logical index properly (map original idx to cloned position)
            this.currentIndex = this.originalCount + idx;
            this.updatePosition();
            this.announceCurrent();
            this.stopAuto();
          });
        });

        this.startAuto();
      }

      removeEventListeners() {
        this.track.removeEventListener('pointerdown', this._onPointerDown);
        window.removeEventListener('pointermove', this._onPointerMove);
        window.removeEventListener('pointerup', this._onPointerUp);
        window.removeEventListener('resize', this._onResize);
        this.track.removeEventListener('transitionend', this._onTransitionEnd);
        this.stopAuto();
      }

      onPointerDown(e) {
        if (e.pointerType === 'mouse' && e.button !== 0) return;
        this.isDragging = true;
        this.startX = e.clientX;
        this.currentX = this.startX;
        this.initialTransform = this.getCurrentTransform();
        this.track.style.transition = 'none';
        try { e.target.setPointerCapture(e.pointerId); } catch (err) {}
        this.stopAuto();
      }

      onPointerMove(e) {
        if (!this.isDragging) return;
        this.currentX = e.clientX;
        const delta = this.currentX - this.startX;
        const newTransform = this.initialTransform + delta;
        this.track.style.transform = 'translateX(' + newTransform + 'px)';
      }

      onPointerUp() {
        if (!this.isDragging) return;
        this.isDragging = false;
        const delta = this.currentX - this.startX;
        const threshold = Math.max(30, this.itemWidth / 4);
        this.track.style.transition = 'transform ' + this.transitionDuration + 'ms ease';
        if (Math.abs(delta) > threshold) {
          if (delta > 0) this.prev();
          else this.next();
        } else {
          this.updatePosition();
        }
        this.startAuto();
      }

      onResize() {
        clearTimeout(this._resizeTimer);
        this._resizeTimer = setTimeout(() => {
          this.calculateItemWidth();
          this.updatePosition(true);
          // Rebuild dots if breakpoint changed
          if (window.matchMedia('(max-width: 749px)').matches) {
            this.stopAuto();
          } else {
            this.startAuto();
          }
        }, 120);
      }

      getCurrentTransform() {
        const style = window.getComputedStyle(this.track);
        const transform = style.transform || 'none';
        if (transform === 'none') return 0;
        const match = transform.match(/matrix\((.+)\)/);
        if (match) {
          const values = match[1].split(', ');
          return parseFloat(values[4]) || 0;
        }
        return 0;
      }

      // Move instantly without transition (used for initial placement and loop jump)
      jumpToCurrent() {
        this.track.style.transition = 'none';
        this.updatePosition(true);
      }

      // updatePosition optionally instant (no transition)
      updatePosition(instant = false) {
        if (instant) this.track.style.transition = 'none';
        const containerWidth = this.track.parentElement.offsetWidth;
        const centerOffset = (containerWidth - this.itemWidth) / 2;
        const translateX = centerOffset - (this.currentIndex * this.itemWidth);
        this.track.style.transform = 'translateX(' + translateX + 'px)';
        if (instant) {
          // force reflow then restore transition
          void this.track.offsetWidth;
          this.track.style.transition = 'transform ' + this.transitionDuration + 'ms ease';
        }
        this.updateCentered();
        this.updateDots();
      }

      updateCentered() {
        const allItems = Array.from(this.track.children);
        allItems.forEach((el, idx) => {
          el.classList.toggle('centered', idx === this.currentIndex);
          // Only original set (after clones) should be focusable as navigable features
          const originalStart = this.originalCount;
          const originalEnd = this.originalCount + this.originalCount - 1;
          if (idx >= originalStart && idx <= originalEnd) {
            // this is one of the original items
            if (idx === this.currentIndex) {
              el.setAttribute('tabindex', '0');
              el.removeAttribute('aria-hidden');
            } else {
              el.setAttribute('tabindex', '-1');
            }
          } else {
            // clones: hide from assistive tech
            el.setAttribute('aria-hidden', 'true');
            el.setAttribute('tabindex', '-1');
          }
        });
      }

      next() {
        this.currentIndex += 1;
        this.updatePosition();
        this.announceCurrent();
        this.updateDots();
      }

      prev() {
        this.currentIndex -= 1;
        this.updatePosition();
        this.announceCurrent();
        this.updateDots();
      }

      // When transition ends, fix up if we moved into cloned region
      onTransitionEnd() {
        const total = this.track.children.length;
        const startOfOriginals = this.originalCount;
        const endOfOriginals = startOfOriginals + this.originalCount - 1;

        // If we've gone past the end clones (too high index), jump back to same logical original
        if (this.currentIndex > endOfOriginals + (this.originalCount)) {
          // map back
          this.currentIndex = this.currentIndex - this.originalCount;
          this.jumpToCurrent();
        }

        // If we've gone before the start clones (too low), jump forward
        if (this.currentIndex < startOfOriginals - this.originalCount) {
          this.currentIndex = this.currentIndex + this.originalCount;
          this.jumpToCurrent();
        }

        // Normalize cases when landing in appended/prepended clones adjacent to originals
        if (this.currentIndex > endOfOriginals && this.currentIndex < total - this.originalCount) {
          const offsetIntoClones = this.currentIndex - (endOfOriginals + 1);
          this.currentIndex = startOfOriginals + offsetIntoClones;
          this.jumpToCurrent();
        }
        if (this.currentIndex < startOfOriginals && this.currentIndex >= 0) {
          const offsetFromPrepended = this.currentIndex;
          const normalized = startOfOriginals + (offsetFromPrepended % this.originalCount);
          this.currentIndex = normalized;
          this.jumpToCurrent();
        }
        // finally ensure classes/tabs synced
        this.updateCentered();
        this.updateDots();
      }

      // Announce for screen readers
      announceCurrent() {
        if (!this.srLiveRegion) return;
        const logicalIndex = ((this.currentIndex - this.originalCount) % this.originalCount + this.originalCount) % this.originalCount;
        this.srLiveRegion.textContent = 'Showing feature ' + (logicalIndex + 1) + ' of ' + this.originalCount;
      }

      // Auto-scroll helpers
      startAuto() {
        // Do not auto-slide on mobile
        if (window.matchMedia('(max-width: 749px)').matches) return;
        this.stopAuto();
        this._autoTimer = setInterval(()=> { this.next(); }, 4000);
      }
      stopAuto() {
        if (this._autoTimer) { clearInterval(this._autoTimer); this._autoTimer = null; }
      }

      // Build mobile dots
      buildDots() {
        if (!this.dotsContainer) return;
        this.dotsContainer.innerHTML = '';
        this.dots = [];
        for (let i = 0; i < this.originalCount; i += 1) {
          const btn = document.createElement('button');
          btn.type = 'button';
          btn.className = 'ai-why-buy-dot-{{ ai_gen_id }}';
          btn.setAttribute('role', 'tab');
          btn.setAttribute('aria-label', 'Go to feature ' + (i + 1));
          btn.addEventListener('click', () => {
            this.currentIndex = this.originalCount + i; // map to original item region
            this.updatePosition();
            this.updateDots();
            this.announceCurrent();
            this.stopAuto();
          });
          this.dotsContainer.appendChild(btn);
          this.dots.push(btn);
        }
      }

      // Sync active dot with logical index
      updateDots() {
        if (!this.dots || !this.dots.length) return;
        const logicalIndex = ((this.currentIndex - this.originalCount) % this.originalCount + this.originalCount) % this.originalCount;
        this.dots.forEach((btn, idx) => {
          const isActive = idx === logicalIndex;
          btn.classList.toggle('is-active', isActive);
          btn.setAttribute('aria-selected', isActive ? 'true' : 'false');
          btn.tabIndex = isActive ? 0 : -1;
        });
      }
    }

    customElements.define('why-buy-carousel-{{ ai_gen_id }}', WhyBuyCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Why buy from us",
  "settings": [
    {
      "type": "header",
      "content": "Section header"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Title",
      "default": "Why buy from us?"
    },
    {
      "type": "textarea",
      "id": "section_subtitle",
      "label": "Subtitle",
      "default": "Discover the benefits that make us your trusted choice"
    },
    {
      "type": "header",
      "content": "Column 1"
    },
    {
      "type": "text",
      "id": "column_1_title",
      "label": "Title",
      "default": "Fast & Free Shipping"
    },
    {
      "type": "textarea",
      "id": "column_1_description",
      "label": "Description",
      "default": "All orders are processed within 3-5 business days"
    },
    {
      "type": "header",
      "content": "Column 2"
    },
    {
      "type": "text",
      "id": "column_2_title",
      "label": "Title",
      "default": "Warranty Protection"
    },
    {
      "type": "textarea",
      "id": "column_2_description",
      "label": "Description",
      "default": "All products are covered by a warranty service"
    },
    {
      "type": "header",
      "content": "Column 3"
    },
    {
      "type": "text",
      "id": "column_3_title",
      "label": "Title",
      "default": "Secure Payments"
    },
    {
      "type": "textarea",
      "id": "column_3_description",
      "label": "Description",
      "default": "Pay by debit or credit card, PayPal, or other secure platform"
    },
    {
      "type": "header",
      "content": "Column 4"
    },
    {
      "type": "text",
      "id": "column_4_title",
      "label": "Title",
      "default": "Multi-channel Support"
    },
    {
      "type": "textarea",
      "id": "column_4_description",
      "label": "Description",
      "default": "Contact us via email, phone or online customer service"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "column_background_color",
      "label": "Column background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "column_title_color",
      "label": "Column title",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "column_description_color",
      "label": "Column description",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon",
      "default": "#2563eb"
    },
    {
      "type": "color",
      "id": "icon_background_color",
      "label": "Icon background",
      "default": "#eff6ff"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 36
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "range",
      "id": "column_title_size",
      "min": 14,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Column title size",
      "default": 20
    },
    {
      "type": "range",
      "id": "column_description_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Column description size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 80
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 80
    },
    {
      "type": "range",
      "id": "header_margin_bottom",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Header bottom margin",
      "default": 48
    },
    {
      "type": "range",
      "id": "content_margin_top",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Content top margin",
      "default": 24
    },
    {
      "type": "range",
      "id": "column_gap",
      "min": 16,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Column gap",
      "default": 32
    },
    {
      "type": "range",
      "id": "column_padding",
      "min": 16,
      "max": 48,
      "step": 4,
      "unit": "px",
      "label": "Column padding",
      "default": 32
    },
    {
      "type": "range",
      "id": "column_border_radius",
      "min": 0,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Column border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 40,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Icon container size",
      "default": 64
    },
    {
      "type": "range",
      "id": "icon_margin_bottom",
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Icon bottom margin",
      "default": 20
    },
    {
      "type": "range",
      "id": "title_margin_bottom",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Title bottom margin",
      "default": 12
    }
  ],
  "presets": [
    {
      "name": "Why buy from us"
    }
  ],
  "tag": null
}
{% endschema %}