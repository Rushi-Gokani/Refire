{% comment %}
  why-buy-from-us.liquid
  Shopify block file for "Why buy from us?" feature
{% endcomment %}

{% schema %}
{
  "name": "Why buy from us?",
  "settings": [
    { "id": "section_title", "type": "text", "label": "Section title", "default": "WHY BUY FROM US?" },
    { "id": "section_subtitle", "type": "text", "label": "Section subtitle", "default": "Discover the benefits that make us your trusted choice" },
    { "id": "background_color", "type": "color", "label": "Section background", "default": "#f5f5f5" },
    { "id": "title_color", "type": "color", "label": "Title color", "default": "#111827" },
    { "id": "subtitle_color", "type": "color", "label": "Subtitle color", "default": "#6b7280" },
    { "id": "column_background_color", "type": "color", "label": "Card background", "default": "#ffffff" },
    { "id": "icon_background_color", "type": "color", "label": "Icon circle background", "default": "#eef6fb" },
    { "id": "icon_color", "type": "color", "label": "Icon color", "default": "#0b78d1" },
    { "id": "column_title_color", "type": "color", "label": "Card title color", "default": "#0f172a" },
    { "id": "column_description_color", "type": "color", "label": "Card description color", "default": "#6b7280" },
    { "id": "section_padding_top", "type": "range", "label": "Top padding", "min": 0, "max": 120, "step": 4, "default": 48 },
    { "id": "section_padding_bottom", "type": "range", "label": "Bottom padding", "min": 0, "max": 120, "step": 4, "default": 48 },
    { "id": "column_gap", "type": "range", "label": "Column gap", "min": 8, "max": 48, "step": 4, "default": 24 },
    { "id": "column_padding", "type": "range", "label": "Card inner padding", "min": 8, "max": 48, "step": 2, "default": 20 },
    { "id": "column_border_radius", "type": "range", "label": "Card radius", "min": 0, "max": 32, "step": 2, "default": 8 },
    { "id": "icon_size", "type": "range", "label": "Icon size", "min": 28, "max": 80, "step": 2, "default": 64 },
    { "id": "feature_1_title", "type": "text", "label": "Feature 1 Title", "default": "Fast & Free Shipping" },
    { "id": "feature_1_description", "type": "textarea", "label": "Feature 1 Description", "default": "All orders are processed within 3-5 business days" },
    { "id": "feature_2_title", "type": "text", "label": "Feature 2 Title", "default": "Warranty Protection" },
    { "id": "feature_2_description", "type": "textarea", "label": "Feature 2 Description", "default": "All products are covered by a warranty service" },
    { "id": "feature_3_title", "type": "text", "label": "Feature 3 Title", "default": "Secure Payments" },
    { "id": "feature_3_description", "type": "textarea", "label": "Feature 3 Description", "default": "Pay by debit or credit card, PayPal, or other secure platform" },
    { "id": "feature_4_title", "type": "text", "label": "Feature 4 Title", "default": "Multi-channel Support" },
    { "id": "feature_4_description", "type": "textarea", "label": "Feature 4 Description", "default": "Contact us via email, phone or online customer service" }
  ],
  "presets": [{"name":"Why buy from us?","category":"Text"}]
}
{% endschema %}

{% assign id = block.id | replace: '_', '' | downcase %}

<section id="why-buy-{{ id }}" class="ai-why-buy-section-{{ id }}">
  <div class="ai-why-buy-container-{{ id }}">
    {% if block.settings.section_title or block.settings.section_subtitle %}
      <header class="ai-why-buy-header-{{ id }}">
        {% if block.settings.section_title %}
          <h2 class="ai-why-buy-title-{{ id }}">{{ block.settings.section_title }}</h2>
        {% endif %}
        {% if block.settings.section_subtitle %}
          <p class="ai-why-buy-subtitle-{{ id }}">{{ block.settings.section_subtitle }}</p>
        {% endif %}
      </header>
    {% endif %}

    <!-- Desktop grid (falls back to carousel on mobile) -->
    <div class="ai-why-buy-grid-{{ id }}">
      <div class="ai-why-buy-column-{{ id }}">
        <div class="ai-why-buy-icon-wrapper-{{ id }}">
          <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
            <path d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_1_title }}</h3>
        <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_1_description }}</p>
      </div>
      
      <div class="ai-why-buy-column-{{ id }}">
        <div class="ai-why-buy-icon-wrapper-{{ id }}">
          <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
            <path d="M9 12l2 2 4-4"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_2_title }}</h3>
        <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_2_description }}</p>
      </div>
      
      <div class="ai-why-buy-column-{{ id }}">
        <div class="ai-why-buy-icon-wrapper-{{ id }}">
          <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
            <path d="M12 15v2m-6 4h12"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_3_title }}</h3>
        <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_3_description }}</p>
      </div>
      
      <div class="ai-why-buy-column-{{ id }}">
        <div class="ai-why-buy-icon-wrapper-{{ id }}">
          <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
            <path d="M21 12c0 4.418-4 8-9 8"/>
          </svg>
        </div>
        <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_4_title }}</h3>
        <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_4_description }}</p>
      </div>
    </div>

    <!-- Mobile carousel (one card visible at a time) -->
    <div class="ai-why-buy-carousel-wrapper-{{ id }}" role="region" aria-label="Features carousel">
      <div class="ai-why-buy-carousel-track-{{ id }}" role="list" aria-live="polite">
        <div class="ai-why-buy-carousel-item-{{ id }}" role="listitem" tabindex="0" aria-label="Feature 1 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ id }}">
            <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_1_title }}</h3>
          <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_1_description }}</p>
        </div>
        
        <div class="ai-why-buy-carousel-item-{{ id }}" role="listitem" tabindex="0" aria-label="Feature 2 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ id }}">
            <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M9 12l2 2 4-4"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_2_title }}</h3>
          <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_2_description }}</p>
        </div>
        
        <div class="ai-why-buy-carousel-item-{{ id }}" role="listitem" tabindex="0" aria-label="Feature 3 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ id }}">
            <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M12 15v2m-6 4h12"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_3_title }}</h3>
          <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_3_description }}</p>
        </div>
        
        <div class="ai-why-buy-carousel-item-{{ id }}" role="listitem" tabindex="0" aria-label="Feature 4 of 4">
          <div class="ai-why-buy-icon-wrapper-{{ id }}">
            <svg class="ai-why-buy-icon-{{ id }}" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M21 12c0 4.418-4 8-9 8"/>
            </svg>
          </div>
          <h3 class="ai-why-buy-column-title-{{ id }}">{{ block.settings.feature_4_title }}</h3>
          <p class="ai-why-buy-column-description-{{ id }}">{{ block.settings.feature_4_description }}</p>
        </div>
      </div>
      <div class="ai-why-buy-sr-only-{{ id }}" aria-live="polite" aria-atomic="true"></div>
    </div>
  </div>
</section>

<style>
  /* Core layout */
  .ai-why-buy-section-{{ id }} { 
    padding: {{ block.settings.section_padding_top }}px 20px {{ block.settings.section_padding_bottom }}px; 
    background: {{ block.settings.background_color }}; 
    box-sizing: border-box; 
    overflow-x: hidden; 
    position: relative; 
  }
  .ai-why-buy-container-{{ id }} { 
    max-width: 1200px; 
    margin: 0 auto; 
    box-sizing: border-box; 
  }
  .ai-why-buy-header-{{ id }} { 
    text-align: center; 
    margin-bottom: 24px; 
  }
  .ai-why-buy-title-{{ id }} { 
    color: {{ block.settings.title_color }}; 
    font-size: 28px; 
    font-weight: 700; 
    margin: 0; 
    line-height: 1.1; 
  }
  .ai-why-buy-subtitle-{{ id }} { 
    color: {{ block.settings.subtitle_color }}; 
    margin: 12px 0 0; 
    font-size: 14px; 
  }

  .ai-why-buy-grid-{{ id }} { 
    display: grid; 
    grid-template-columns: repeat(4, 1fr); 
    gap: {{ block.settings.column_gap }}px; 
    margin-top: 12px; 
  }
  .ai-why-buy-column-{{ id }} { 
    text-align: center; 
    padding: {{ block.settings.column_padding }}px; 
    background: {{ block.settings.column_background_color }}; 
    border-radius: {{ block.settings.column_border_radius }}px; 
    transition: transform 0.28s ease, box-shadow 0.28s ease; 
    box-sizing: border-box; 
  }
  .ai-why-buy-column-{{ id }}:hover { 
    transform: translateY(-4px); 
    box-shadow: 0 10px 30px rgba(2, 6, 23, 0.06); 
  }

  .ai-why-buy-icon-wrapper-{{ id }} { 
    width: {{ block.settings.icon_size }}px; 
    height: {{ block.settings.icon_size }}px; 
    margin: 0 auto 12px; 
    display: flex; 
    align-items: center; 
    justify-content: center; 
    background: {{ block.settings.icon_background_color }}; 
    border-radius: 50%; 
  }
  .ai-why-buy-icon-{{ id }} { 
    width: calc({{ block.settings.icon_size }}px * 0.5); 
    height: calc({{ block.settings.icon_size }}px * 0.5); 
    stroke: {{ block.settings.icon_color }}; 
    stroke-width: 2; 
    fill: none; 
  }

  .ai-why-buy-column-title-{{ id }} { 
    color: {{ block.settings.column_title_color }}; 
    font-size: 16px; 
    font-weight: 700; 
    margin: 0 0 8px; 
  }
  .ai-why-buy-column-description-{{ id }} { 
    color: {{ block.settings.column_description_color }}; 
    font-size: 13px; 
    margin: 0; 
    line-height: 1.45; 
  }

  /* Carousel (mobile) */
  .ai-why-buy-carousel-wrapper-{{ id }} { 
    display: none; 
    overflow: hidden; 
    margin-top: 16px; 
    position: relative; 
    box-sizing: border-box; 
  }
  .ai-why-buy-carousel-track-{{ id }} { 
    display: flex; 
    transition: transform 0.32s ease; 
    will-change: transform; 
    box-sizing: border-box; 
  }
  .ai-why-buy-carousel-item-{{ id }} { 
    flex: 0 0 calc(100vw - 48px); 
    max-width: calc(100vw - 48px); 
    margin: 0; 
    padding: 18px; 
    background: {{ block.settings.column_background_color }}; 
    border-radius: {{ block.settings.column_border_radius }}px; 
    box-sizing: border-box; 
    text-align: center; 
  }
  .ai-why-buy-carousel-item-{{ id }}:focus { 
    outline: 2px solid {{ block.settings.icon_color }}; 
    outline-offset: 4px; 
  }

  /* Responsive: grid -> 2 columns under 990 */
  @media (max-width: 990px) {
    .ai-why-buy-grid-{{ id }} { 
      grid-template-columns: repeat(2, 1fr); 
    }
  }

  /* MOBILE: show carousel, ONE card visible centered exactly */
  @media (max-width: 749px) {
    .ai-why-buy-grid-{{ id }} { 
      display: none; 
    }
    .ai-why-buy-carousel-wrapper-{{ id }} { 
      display: block; 
      padding: 0; 
    }
    .ai-why-buy-carousel-item-{{ id }} { 
      flex: 0 0 100vw; 
      max-width: 100vw; 
      padding-left: 20px; 
      padding-right: 20px; 
    }
    .ai-why-buy-carousel-item-{{ id }}.centered { 
      transform: none; 
    }
    .ai-why-buy-title-{{ id }}, .ai-why-buy-subtitle-{{ id }} { 
      text-align: center; 
      padding-left: 12px; 
      padding-right: 12px; 
    }
  }

  /* Small phones */
  @media (max-width: 420px) {
    .ai-why-buy-carousel-item-{{ id }} { 
      padding-left: 14px; 
      padding-right: 14px; 
    }
    .ai-why-buy-title-{{ id }} { 
      font-size: 22px; 
    }
  }

  /* Prevent overflow aggressively */
  .ai-why-buy-section-{{ id }}, 
  .ai-why-buy-container-{{ id }}, 
  .ai-why-buy-carousel-wrapper-{{ id }}, 
  .ai-why-buy-carousel-track-{{ id }} { 
    box-sizing: border-box; 
    max-width: 100vw; 
    overflow-x: hidden; 
  }
  .ai-why-buy-section-{{ id }} img, 
  .ai-why-buy-section-{{ id }} svg { 
    max-width: 100%; 
    height: auto; 
    display: block; 
    box-sizing: border-box; 
  }
</style>

<script>
  (function(){
    class WhyBuyCarousel{{ id }} extends HTMLElement {
      constructor() {
        super();
        this.track = null;
        this.items = [];
        this.originalCount = 4; // Fixed to 4 features
        this.currentIndex = 0;
        this.itemWidth = 0;
        this.isDragging = false;
        this.startX = 0;
        this.currentX = 0;
        this.initialTransform = 0;
        this.transitionDuration = 320;
        this._resizeTimer = null;
        this.srLive = null;
        this._autoTimer = null;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-why-buy-carousel-track-{{ id }}');
        this.srLive = this.querySelector('.ai-why-buy-sr-only-{{ id }}');
        if (!this.track) return;

        this.setupClones();
        this.items = Array.from(this.track.children);
        this.calculateItemWidth();
        this.currentIndex = this.originalCount;
        this.jumpToCurrent();
        this.bindEvents();
        this.updateCentered();
        this.announce();
      }

      disconnectedCallback() { 
        this.unbindEvents(); 
      }

      setupClones() {
        const children = Array.from(this.track.children);
        if (children.length >= this.originalCount * 3) return;
        const firstN = children.slice(0, this.originalCount);
        const lastN = children.slice(-this.originalCount);
        lastN.forEach(node => { 
          const clone = node.cloneNode(true); 
          clone.classList.add('ai-clone'); 
          this.track.insertBefore(clone, this.track.firstChild); 
        });
        firstN.forEach(node => { 
          const clone = node.cloneNode(true); 
          clone.classList.add('ai-clone'); 
          this.track.appendChild(clone); 
        });
      }

      calculateItemWidth() {
        if (!this.track || !this.track.children.length) return;
        const containerWidth = this.track.parentElement ? this.track.parentElement.offsetWidth : window.innerWidth;
        if (window.matchMedia('(max-width: 749px)').matches) {
          this.itemWidth = Math.round(containerWidth);
        } else {
          const rect = this.track.children[0].getBoundingClientRect();
          this.itemWidth = Math.round(rect.width);
        }
        Array.from(this.track.children).forEach(child => child.style.width = `${this.itemWidth}px`);
        this.track.style.width = `${this.track.children.length * this.itemWidth}px`;
      }

      bindEvents() {
        this._onPointerDown = this.onPointerDown.bind(this);
        this._onPointerMove = this.onPointerMove.bind(this);
        this._onPointerUp = this.onPointerUp.bind(this);
        this._onResize = this.onResize.bind(this);
        this._onTransitionEnd = this.onTransitionEnd.bind(this);

        this.track.addEventListener('pointerdown', this._onPointerDown, { passive: true });
        window.addEventListener('pointermove', this._onPointerMove, { passive: true });
        window.addEventListener('pointerup', this._onPointerUp);
        window.addEventListener('resize', this._onResize);
        this.track.addEventListener('transitionend', this._onTransitionEnd);

        const originalItems = Array.from(this.querySelectorAll('.ai-why-buy-carousel-item-{{ id }}')).slice(0, this.originalCount);
        originalItems.forEach((el, idx) => {
          el.addEventListener('keydown', e => { 
            if (e.key === 'ArrowLeft') { 
              e.preventDefault(); 
              this.prev(); 
            } 
            if (e.key === 'ArrowRight') { 
              e.preventDefault(); 
              this.next(); 
            } 
          });
          el.addEventListener('focus', () => { 
            this.currentIndex = this.originalCount + idx; 
            this.updatePosition(); 
            this.announce(); 
            this.stopAuto(); 
          });
        });

        this.track.addEventListener('mouseenter', () => this.stopAuto());
        this.track.addEventListener('mouseleave', () => this.startAuto());

        this.startAuto();
      }

      unbindEvents() {
        this.track.removeEventListener('pointerdown', this._onPointerDown);
        window.removeEventListener('pointermove', this._onPointerMove);
        window.removeEventListener('pointerup', this._onPointerUp);
        window.removeEventListener('resize', this._onResize);
        this.track.removeEventListener('transitionend', this._onTransitionEnd);
        this.stopAuto();
      }

      onPointerDown(e) {
        if (e.pointerType === 'mouse' && e.button !== 0) return;
        this.isDragging = true;
        this.startX = e.clientX;
        this.currentX = this.startX;
        this.initialTransform = this.getCurrentTransform();
        this.track.style.transition = 'none';
        try { 
          e.target.setPointerCapture(e.pointerId); 
        } catch (err) {
          // Ignore errors
        }
        this.stopAuto();
      }

      onPointerMove(e) {
        if (!this.isDragging) return;
        this.currentX = e.clientX;
        const delta = this.currentX - this.startX;
        const newTransform = this.initialTransform + delta;
        this.track.style.transform = `translateX(${newTransform}px)`;
      }

      onPointerUp() {
        if (!this.isDragging) return;
        this.isDragging = false;
        const delta = this.currentX - this.startX;
        const threshold = Math.max(30, this.itemWidth / 4);
        this.track.style.transition = `transform ${this.transitionDuration}ms ease`;
        if (Math.abs(delta) > threshold) {
          if (delta > 0) this.prev();
          else this.next();
        } else {
          this.updatePosition();
        }
        this.startAuto();
      }

      onResize() {
        clearTimeout(this._resizeTimer);
        this._resizeTimer = setTimeout(() => {
          this.calculateItemWidth();
          this.updatePosition(true);
        }, 100);
      }

      getCurrentTransform() {
        const style = window.getComputedStyle(this.track);
        const transform = style.transform || 'none';
        if (transform === 'none') return 0;
        const match = transform.match(/matrix\((.+)\)/);
        if (match) {
          const values = match[1].split(', ');
          return parseFloat(values[4]) || 0;
        }
        return 0;
      }

      jumpToCurrent() {
        this.track.style.transition = 'none';
        this.updatePosition(true);
      }

      updatePosition(instant = false) {
        if (instant) this.track.style.transition = 'none';
        const containerWidth = this.track.parentElement.offsetWidth;
        const centerOffset = (containerWidth - this.itemWidth) / 2;
        const translateX = centerOffset - (this.currentIndex * this.itemWidth);
        this.track.style.transform = `translateX(${translateX}px)`;
        if (instant) { 
          void this.track.offsetWidth; 
          this.track.style.transition = `transform ${this.transitionDuration}ms ease`; 
        }
        this.updateCentered();
      }

      updateCentered() {
        const all = Array.from(this.track.children);
        all.forEach((el, idx) => {
          el.classList.toggle('centered', idx === this.currentIndex);
          const originalStart = this.originalCount;
          const originalEnd = originalStart + this.originalCount - 1;
          if (idx >= originalStart && idx <= originalEnd) {
            if (idx === this.currentIndex) { 
              el.setAttribute('tabindex', '0'); 
              el.removeAttribute('aria-hidden'); 
            } else { 
              el.setAttribute('tabindex', '-1'); 
            }
          } else {
            el.setAttribute('aria-hidden', 'true'); 
            el.setAttribute('tabindex', '-1');
          }
        });
      }

      next() {
        this.currentIndex += 1;
        this.updatePosition();
        this.announce();
      }

      prev() {
        this.currentIndex -= 1;
        this.updatePosition();
        this.announce();
      }

      onTransitionEnd() {
        const total = this.track.children.length;
        const startOfOriginals = this.originalCount;
        const endOfOriginals = startOfOriginals + this.originalCount - 1;

        if (this.currentIndex > endOfOriginals + this.originalCount) {
          this.currentIndex = this.currentIndex - this.originalCount;
          this.jumpToCurrent();
        }
        if (this.currentIndex < startOfOriginals - this.originalCount) {
          this.currentIndex = this.currentIndex + this.originalCount;
          this.jumpToCurrent();
        }

        if (this.currentIndex > endOfOriginals && this.currentIndex < total - this.originalCount) {
          const offsetIntoClones = this.currentIndex - (endOfOriginals + 1);
          this.currentIndex = startOfOriginals + offsetIntoClones;
          this.jumpToCurrent();
        }
        if (this.currentIndex < startOfOriginals && this.currentIndex >= 0) {
          const offsetFromPrepended = this.currentIndex;
          const normalized = startOfOriginals + (offsetFromPrepended % this.originalCount);
          this.currentIndex = normalized;
          this.jumpToCurrent();
        }

        this.updateCentered();
      }

      announce() {
        if (!this.srLive) return;
        const logical = ((this.currentIndex - this.originalCount) % this.originalCount + this.originalCount) % this.originalCount;
        this.srLive.textContent = `Showing feature ${logical + 1} of ${this.originalCount}`;
      }

      startAuto() {
        this.stopAuto();
        this._autoTimer = setInterval(() => { 
          this.next(); 
        }, 5000);
      }
      
      stopAuto() {
        if (this._autoTimer) { 
          clearInterval(this._autoTimer); 
          this._autoTimer = null; 
        }
      }
    }

    customElements.define('why-buy-carousel-{{ id }}', WhyBuyCarousel{{ id }});
  })();
</script>
